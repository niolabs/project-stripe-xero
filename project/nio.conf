# n.io project configuration
#
[user_defined]

# host and port to launch rest web server on
NIOHOST=0.0.0.0
NIOPORT=8181

# Path to project root, leave blank to auto detect - it will use the root
# specified when running the binary (passed with -r or --root)
PROJECT_ROOT=

INSTANCE_NAME=stripe_xero
INSTANCE_ID=stripe_xero

# Pubkeeper Client
PK_HOST=
PK_PORT=443
PK_TOKEN=
PK_SECURE=True
PK_CA_CHAIN=

# WebsocketBrew Variables
WS_HOST=
WS_PORT=443
WS_SECURE=True

[components]

# discoverable components that should be disabled from project
#
disabled=SNMPAgent, PubkeeperServer

[logging]

# dictionary of python logging configuration
#
conf=etc/logging.json


[pubkeeper_client]
# The JWT token issued to you by the pubkeeper server, used to authenticate
#
token=[[PK_TOKEN]]

# IP of the Pubkeeper Server
#
host=[[PK_HOST]]

# Port of the Pubkeeper Server
#
port=[[PK_PORT]]

# Certificate Authority Chain for Pubkeeper Server
# when using self assigned certificates,  Using this
# option will force secure to true
#
ca_chain=[[PK_CA_CHAIN]]

# Assume wss, for secure connection to pubkeeper server
#
secure=[[PK_SECURE]]

# Validate certificate.  Useful for testing self-assigned
# certificates without a ca_chain.
#
#validate=True

# Interval to keep heartbeat on the websocket channel.  After 3 failed intervals
# the server will close the connection (default: 10)
#
#websocket_ping_interval=10

# List of all the brews you wish to use with the system
# should be a comma separated list of the classes
#
brews=pubkeeper.brew.local.brew.LocalBrew, pubkeeper.brew.websocket.brew.WebsocketBrew


[pubkeeper.brew.local.brew.LocalBrew]
# use localhost rather than unix domain socket
#
# use_localhost=False

[pubkeeper.brew.websocket.brew.WebsocketBrew]
# hostname/ip of the Websocket Server
#
ws_host=[[WS_HOST]]

# port of the Websocket Server
#
ws_port=[[WS_PORT]]

# Should we maintain a wss connection to websocket server
#
ws_secure=[[WS_SECURE]]

[rest]

# settings for the web server that will host the core REST API
#

# host and port to launch rest web server on
#
port=[[NIOPORT]]
host=[[NIOHOST]]

# if configured host is unavailable, interval at which network availability is checked and web server restarted
#
#network_retry_interval=30

# path to ssl certificate files
#
ssl_certificate:
ssl_private_key:
# optional certificate chain
ssl_certificate_chain:
